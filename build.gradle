plugins {
	id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
    id 'org.spongepowered.mixin' version '0.7.+'
	id "com.matthewprenger.cursegradle" version "1.4.0"
	id "com.modrinth.minotaur" version "2.+"
}

mixin {
    add sourceSets.main, modFilename+"-refmap.json"
    config "${modId}.mixins.json"
}

version = modMinecraftVersion + "-" +modVersion +"-"+modLoader
group = modGroup // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = modFilename

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
println('Mod Name: ' + modFilename + ', Mod Version: ' + modVersion + ', Minecraft Version: ' + modMinecraftVersion + ', Loader Version: ' + modLoaderVersion)

minecraft {
    mappings channel: mappingsChannel, version: mappingsVersion
    //makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file('run/client')
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.disableRefMap', 'true'

			args '--username', 'Stereowalker', '--uuid', "$System.env.MINECRAFTUUIDSTEREOWALKER"
			arg "--mixin.config="+modId+".mixins.json"

            //property 'forge.enabledGameTestNamespaces', mod_id

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run/server')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'mixin.env.disableRefMap', 'true'
            arg "--mixin.config="+modId+".mixins.json"

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            //property 'forge.enabledGameTestNamespaces', mod_id

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
	maven {
		// location of the maven that hosts JEI files
		name = "Progwml6 maven"
		url = "https://dvs1.progwml6.com/files/maven/"
	}
	maven { 
		url = "https://maven.theillusivec4.top/"
	}
	maven {url "https://modmaven.dev/" }// UnionLib
	maven { 
		url 'https://maven.blamejared.com' 
	}
	maven {
        url "https://www.cursemaven.com"
    }
    maven {url = "https://repo.spongepowered.org/maven"} // mixin
}

dependencies {
	minecraft 'net.minecraftforge:forge:' + modMinecraftVersion + '-' + modLoaderVersion
	annotationProcessor "org.spongepowered:mixin:"+modMixinVersion+":processor"
	implementation "org.spongepowered:mixin:"+modMixinVersion+""
	implementation fileTree(include: ['*.jar'], dir: 'libs')
	implementation fg.deobf("com.stereowalker.unionlib:UnionLib:"+modMinecraftVersion+"-"+unionLibVersion+"-"+modLoader+"")
	
	compileOnly fg.deobf("mezz.jei:jei-${modMinecraftVersion}-forge-api:"+jeiVersion+"")
	runtimeOnly fg.deobf("mezz.jei:jei-${modMinecraftVersion}-forge:"+jeiVersion+"")
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": modFilename,
            "Specification-Vendor": "Stereowalker",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"Stereowalker",
            "MixinConfigs": modId+".mixins.json",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

curseforge {
    project {
    	id = modCurseId
		apiKey = "$System.env.CURSEFORGEKEY"
		changelog = file('changelog.md')
		changelogType = "markdown"
		releaseType = 'release'
		addGameVersion(modMinecraftVersion)
        addGameVersion("Forge")
        relations {
      		requiredDependency 'unionlib'
		}
		mainArtifact(jar) {
			displayName = modFilename+"-$project.version"
		}
	}		
}

modrinth {
    token = "$System.env.MODRINTH_TOKEN"
    projectId = modId
    versionNumber = "${project.version}"
    versionType = "release"
    uploadFile = jar
    gameVersions = [modMinecraftVersion, "1.20"]
    loaders = ["${project.modLoader}".toLowerCase()]
	changelog = file('changelog.md').text
    dependencies {
        required.project "unionlib"
    }
}
// Example configuration to allow publishing using the maven-publish task
// we define a custom artifact that is sourced from the reobfJar output task
// and then declare that to be published
// Note you'll need to add a repository here
//def reobfFile = file("$buildDir/reobfJar/output.jar")
//def reobfArtifact = artifacts.add('default', reobfFile) {
//    type 'jar'
//    builtBy 'reobfJar'
//}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}

artifacts {
	//archives sourcesJar
	//archives deobfJar
	//archives apiJar
}
